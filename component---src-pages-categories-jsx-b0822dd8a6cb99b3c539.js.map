{"version":3,"sources":["webpack:///./src/pages/categories.jsx"],"names":["StyledLink","Link","Categories","render","this","props","categories","data","location","categorySet","Set","edges","forEach","edge","node","category","cat","add","document","name","categoryList","Array","from","customSEO","title","website","titleAlt","pathname","dark","id","masthead","compact","map","Item","key","to","kebabCase","Component","pageQuery"],"mappings":"0YAUA,IAAMA,EAAa,YAAOC,OAAP,sBAAH,gEAKKC,E,gLACnBC,OAAA,WAAU,IAAD,EAIHC,KAAKC,MAFCC,EAFH,EAELC,KAAQD,WACRE,EAHK,EAGLA,SAGIC,EAAc,IAAIC,IAExBJ,EAAWK,MAAMC,SAAQ,SAAAC,GACnBA,EAAKC,KAAKP,KAAKD,WAAW,GAAGS,UAC/BF,EAAKC,KAAKP,KAAKD,WAAWM,SAAQ,SAAAI,GAChCP,EAAYQ,IAAID,EAAID,SAASG,SAAS,GAAGX,KAAKY,YAKpD,IAAMC,EAAeC,MAAMC,KAAKb,GAEhC,OACE,YAAC,IAAD,CAAQc,WAAS,GACf,YAAC,IAAD,CACEC,MAAK,mBAAqBC,IAAQC,SAClCC,SAAUnB,EAASmB,WAErB,YAAC,IAAD,CAASC,MAAM,EAAMC,GAAG,SAASV,KAAK,YAAYW,UAAU,IAC5D,YAAC,IAAD,CAASD,GAAG,aAAaE,SAAS,GAChC,YAAC,IAAD,KACGX,EAAaY,KAAI,SAAAhB,GAAG,OACnB,YAAC,IAAUiB,KAAX,CAAgBC,IAAKlB,GACnB,YAAChB,EAAD,CAAYmC,GAAE,eAAiBC,IAAUpB,IACtCA,W,GA/BqBqB,aA0C3BC,EAAS","file":"component---src-pages-categories-jsx-b0822dd8a6cb99b3c539.js","sourcesContent":["import React, { Component } from \"react\"\nimport { Layout } from \"../components\"\nimport Section from \"../components/Section\"\nimport { graphql, Link } from \"gatsby\"\nimport kebabCase from \"lodash/kebabCase\"\nimport { ListGroup } from \"react-bootstrap\"\nimport styled from \"@emotion/styled\"\nimport website from \"../../config\"\nimport SEO from \"../components/SEO\"\n\nconst StyledLink = styled(Link)`\n  font-size: 2.369rem;\n  font-style: normal;\n`\n\nexport default class Categories extends Component {\n  render() {\n    const {\n      data: { categories },\n      location,\n    } = this.props\n\n    const categorySet = new Set()\n\n    categories.edges.forEach(edge => {\n      if (edge.node.data.categories[0].category) {\n        edge.node.data.categories.forEach(cat => {\n          categorySet.add(cat.category.document[0].data.name)\n        })\n      }\n    })\n\n    const categoryList = Array.from(categorySet)\n\n    return (\n      <Layout customSEO>\n        <SEO\n          title={`Все категории | ${website.titleAlt}`}\n          pathname={location.pathname}\n        />\n        <Section dark={true} id=\"header\" name=\"Категории\" masthead={true} />\n        <Section id=\"categories\" compact={true}>\n          <ListGroup>\n            {categoryList.map(cat => (\n              <ListGroup.Item key={cat}>\n                <StyledLink to={`/categories/${kebabCase(cat)}`}>\n                  {cat}\n                </StyledLink>\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n        </Section>\n      </Layout>\n    )\n  }\n}\n\nexport const pageQuery = graphql`\n  query CategoriesQuery {\n    categories: allPrismicPost {\n      edges {\n        node {\n          id\n          uid\n          data {\n            categories {\n              category {\n                document {\n                  data {\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}